version: "3.8"

services:
  store-mongo:
    container_name: store-mongo
    image: yong7317/mongo-o2o:latest
    ports:
      - '27017:27017'
    networks:
      - o2o-network
  store-redis:
    container_name: store-redis
    image: devpsh/redis-o2o:latest
    ports:
      - '6379:6379'
    networks:
      - o2o-network
  order-postgres:
    container_name: order-postgres
    image: postgres:17.2
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: o2o
      TZ: Asia/Seoul
      PGTZ: Asia/Seoul
    networks:
      - o2o-network
  migrate-postgres:
    image: flyway/flyway:7
    container_name: migrate-postgres
    environment:
      - FLYWAY_DB_URL=jdbc:postgresql://order-postgres/o2o
      - FLYWAY_DB_USER=root
      - FLYWAY_DB_PASSWORD=root
    command: migrate
    volumes:
      - ./flyway/flyway.conf:/flyway/conf/flyway.conf
      - ./flyway/migration:/flyway/sql
    networks:
      - o2o-network
#  app-client:
#    container_name: app-client
#    image: yong7317/application-client:latest
#    env_file:
#      - .env
#    ports:
#      - '8083:8081'
#    command: ["java", "-jar", "-Duser.timezone=Asia/Seoul", "/client-app.jar", "--spring.profiles.active=dev"]
#    volumes:
#      - /home/ec2-user/backend/log:/var/log
#    networks:
#      - o2o-network
#    depends_on:
#      - store-mongo
#      - store-redis
#      - order-postgres
#  app-admin:
#    container_name: app-admin
#    image: yong7317/application-admin:latest
#    ports:
#      - '8084:8082'
#    command: ["java", "-jar", "-Duser.timezone=Asia/Seoul", "/admin-app.jar", "--spring.profiles.active=dev"]
#    volumes:
#      - /home/ec2-user/backend/log:/var/log
#    networks:
#      - o2o-network
#    depends_on:
#      - store-mongo
#      - store-redis
#      - order-postgres

  prometheus:
    image: prom/prometheus:v2.53.3
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus-prod.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.listen-address=:9090'
    restart: unless-stopped
    networks:
      - o2o-network

  grafana:
    image: grafana/grafana-oss:11.5.1
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
      - loki
    restart: unless-stopped
    networks:
      - o2o-network

  loki:
    image: grafana/loki:3.3.2
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped
    networks:
      - o2o-network
  promtail:
    image: grafana/promtail:2.8.0
    container_name: promtail
    volumes:
      - ./promtail/config.yml:/etc/promtail/config.yml
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    restart: unless-stopped
    networks:
      - o2o-network

volumes:
  prometheus_data:
  grafana_data:
  loki_data:

networks:
  o2o-network:
    driver: bridge
